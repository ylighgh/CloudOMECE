=== OpenStack

==== 简介

OpenStack 是（Infrastructure As A Service，基础设施即服务）IAAS 架构的实现;

OpenStack 是一个由 NASA（美国国家航空航天局）和 Rackspace 合作研发并发起的，以 Apache 许可证授权的自由软件和开放源代码项目;

OpenStack 是一个开源的云计算管理平台项目，由几个主要的组件组合起来完成具体工作;

OpenStack 支持几乎所有类型的云环境，项目目标是提供实施简单、可大规模扩展、丰富、标准统一的云计算管理平台;

OpenStack 通过各种互补的服务提供了基础设施即服务（IAAS）的解决方案，每个服务提供 API 以进行集成;

OpenStack 是一个旨在为公共及私有云的建设与管理提供软件的开源项目;

它的社区拥有超过 130 家企业及 1350 位开发者，这些机构与个人都将 OpenStack 作为基础设施即服务（IAAS）资源的通用前端;

OpenStack 项目的首要任务是简化云的部署过程并为其带来良好的可扩展性。 OpenStack 云计算平台帮助服务商和企业内部实现类似于 Amazon EC2 和 S3 的云基础架构服务(Infrastructure as a Service, IaaS);

OpenStack 包含两个主要模块：Nova 和 Swift，前者是 NASA 开发的虚拟服务器部署和业务计算模块；后者是 Rackspace 开发的分布式云存储模块， 两者可以一起用，也可以分开单独用;

OpenStack 除了有 Rackspace 和 NASA 的大力支持外，还有包括 Dell、Citrix、Cisco、Canonical 等重量级公司的贡献和支持，发展速度非常快

==== OpenStack的技术性能
OpenStack包含12个核心项目

* Austin：第一个发布的OpenStack项目，其中包括Swift对象存储和Nova计算模块，有一个简单的控制台，允许用户通过Web管理计算和存储。

* Bexar： 增加Glance项目，负责镜像注册和分发。Swift中增加了大文件的支持和S3接口的中间件，在Nova中增加raw磁盘格式的支持等。

* Cactus:在Nova中增加了虚拟化技术的支持，包括LXC、VMware、ESX,同时支持动态迁移虚拟机。

* Diablo: Nova 整合Keystone认证，支持KVM的暂停和恢复，KVM的迁移、全局的防火墙。

* Essex:正式发布Horizon,支持第三方的插件扩展Web控制台,发布Keystone项目，提供认证服务。

* Folsom:正式发布Quantum (Neutron的前身)项目，提供网络服务;正式发布Cinder项目，提供块存储服务。Nova 支持LVM为后端的虚拟机，支持动态和块迁移等。

* Grizzly: Nova支持分布在不同地理位置的集群组成一个cell， 支持通过libguestfs 直接向guest文件系统中添加文件;Glance提供的Image位置URL直接获取Image内容来加速启动;支持在无Image条件下启动带块设备的实例;支持为虚机实例设置(CPU磁盘I0、网络带宽)配额。

* Havana:正式发布Ceilometer项目，进行(内部)数据统计，可用于监控报警:正式发布Heat项目，让应用开发者通过模板定义基础架构并自动部署;网络服务Quantum变更为Neutron; Nova 中支持在使用cell时，同一cell 中虚机的动态迁移;支持Docker管理的容器:使用Cinder 卷时支持加密; Neutron 中引入一种新的边界网络防火墙服务;可通过VPN服务插件支持IPSec VPN; Cinder中支持直接使用裸盘做存储设备,无需再创建LVM。

* Icehouse:新项目Trove ( DB as a service)现在已经成为版本中的组成部分，它允许用户在OpenStack 环境中管理关系数据库服务;对象存储(Swift) 项目有比较大的更新，包括可发现性地引入和一个全新的复制过程(称为s-syne);联合身份验证将允许用户通过相同认证信息同时访问OpenStack 私有云与公有云。

* Juno:提出NFV网络虚拟化概念;新增Sahara项目，用户大数据的集群部署;新增LDAP可集成KeyStone认证。

* Kilo: Horizon 支持向导式创建虚拟机; Nova部分标准化了conductor、 compute 与scheduler的接口，为之后的接口分离做好准备; Glance 增加自动镜像转化格式功能。

* Liberty: Neutron 增加管理安全和带宽，更方便向IPv6迁移，LBaaS已经成为生产化工具;Glance基于镜像签名和校验，提升安全性:Swift提高基本性能和可运维功能;Keystone增加混合云的认证管理:引入容器管理的Magnum 项目，通过与OpenStack现有的组件如Nova、Ironic 与Neutron的绑定，Magnum 让容器技术的采用变得更加容易。

* Mitaka: Mitaka聚焦于可管理性、可扩展性和终端用户体验三方面。重点在用户体验上简化了Nova和Keynote的使用，以及使用一致的API调用创建资源: Mitaka 版本中可以处理更大的负载和更为复杂的橫向扩展。

OpenStack到如今已经发布到第18个版本Rocky,新版增强了人工智能、机器学习、网络功能虚拟化(NFV)和边缘计算能力。可以看到，OpenStack 组件的数据在不断的增加，新支持的功能也是在不断丰富。

==== 工作流程

OpenStack的各个服务之间通过统一的REST风格的API调用，实现系统的松耦合。它内部组件的工作过程是一个有序的整体。诸如计算资源分配、控制调度、网络通信等都通过AMQP (高级消息队列协议)实现。OpenStack 的上层用户是程序员、一般用户和Horizon界面等模块。这三者都是采用OpenStack各个组件提供的API接口进行交互，而它们之间则是通过AMQP进行互相调用，它们共同利用底层的虚拟资源为上层用户和程序提供云计算服务。

==== 管理流程

OpenStack既然是一个开源的云平台项目，它的主要任务是给用户提供IaaS服务。

.1.QEMU

QEMU是一个纯软件的计算机硬件仿真器。通过单独运行QEMU来模拟物理计算机，具有非常灵活和可移植的特点，利用它能够达到使用软件取代硬件的效果。
一般情况下,OpenStack可以部署在Ubuntu的Linux操作系统上,为了进一步提高QEMU的运行效率，往往会增加一个KVM硬件加速模块。KVM内嵌在Linux操作系统内核之中，能够直接参与计算机硬件的调度，这一点是QEMU所不具备的。一般的QEMU程序的执行;必然要经过程序从用户态向内核态的转变，这必然会在一定程度上降低效率。所以，QEMU虽然能够通过转换对硬件进行访问，但在OpenStack 中往往采用KVM进行辅助，使得OpenStack的性能表现得更为良好。
需要说明的是KVM需要良好的硬件支持，如果有些硬件本身不支持虚拟化,那么KVM则不能使用。

.2.Libvirt

Libvirt是一个开源的、支持Linux下虚拟化工具的函数库。实质上它就是为构建虚拟化管理工具的API函数。Libvirt是为了能够更方便地管理平台虚拟化技术而设计的开放源代码的应用程序接口，它不仅提供了对虚拟化客户机的管理，也提供了对虚拟化网络和存储的管理。
最初，Libvirt 是只针对Xen而设计的一系列管理和调度Xen下的虚拟化资源的API函数。目前高版本的Libvirt 可以支持多种虚拟化方案，包括KVM、QEMU、Xen、VMware、VirtualBox等在内的平台虚拟化方案，又支持Openvz、LXC等Linux容器虚拟化系统，还支持用户态Linux (UML)的虚拟化，它能够对虚拟化方案中的Hypervisor进行适配，让底层Hypervisor对上层用户空间的管理工具可以做到完全透明。

==== OpenStack系统架构

OpenStack核心的组件主要有3个：

. Nova – 计算服务
. Swift – 存储服务
. Glance – 镜像服务

架构如下：

image::openstack.png[]

image::openstack_02.png[]

在介绍这3个服务之前，先普及一个知识。大家平时买的电脑，包括了CPU，内存，硬盘等模块。CPU负责计算，硬盘负责存储，所以对使用的人来说，不会区分这两个资源。”云”平台虽然也是由一系列物理主机构成，但是它的计算资源和存储资源是分开来管理的。打个简单的比方（实际情况当然要复杂的多），你有4台2核CPU，40G硬盘的主机A，B，C，D组成”云”。现在你要申请4核CPU资源和60G存储资源。”云”平台很可能分配你主机A和B的CPU，主机C和D的硬盘，而且C上只给你分配了20G。但是你使用起来完全感觉不到这些，就像是在同一台物理主机上操作一样。其实你的CPU计算是分布式的，硬盘存储也是分布式的。两个分布式资源分别由不同的”云”平台服务负责分配管理。

.Nova
这是OpenStack的计算控制器。它负责管理、启动、运行”云”实例，分配计算资源和网络资源，控制访问权限。客户端通过Nova API来与其交互。对于用户来说，Nova的功能类似于Amazon的EC2服务，提供用户虚拟机实例的使用。

.Swift
这是OpenStack的对象存储系统。为OpenStack提供分布式的，最终一致的虚拟对象存储。内建了数据冗余备份和恢复，大文件存储等功能。对于用户来说，Swift的功能类似于Amazon的S3服务。借助于Swift，”云”上的虚拟机存储空间可以弹性扩容。

.Glance
这是OpenStack的镜像管理系统。了解虚拟机技术的朋友们应该知道，运行中的虚拟机，可以保存为一个镜像。将来启动加载这个镜像，就立马恢复到保存时虚拟机的状态，避免环境重复搭建。Nova运行的实例，也可以保存为镜像。而这些镜像的管理（存储，查询，检索等），就由Glance负责。当用户启动一个镜像时，Nova API通过调用Glance API找到需要加载的镜像，并分配计算，网络等资源，将镜像加载到虚拟机实例中。


==== 部署OpenStack平台

.规划节点
[cols="10,11,12", options="规划节点"] 
|===
|IP地址 |主机名 |节点


|192.168.10.10
|controller
|控制节点


|192.168.10.20
|compute
|计算节点

|===

[NOTE]
====
操作环境要求

- 操作系统：CentOS 7.2 （CentOS-7-x86_64-DVD-1511.iso）
- 内存：4GB以上
- 硬盘：50GB以上
- 网卡：每个节点两个网卡（第一个网卡网段为192.168.10.0/24 仅主机模式， 第二个网卡网段为192.168.20.0/24 NAT模式）
- 并对compute节点分两个分区为sda3和sda4
  
==== 

===== controller（控制节点）配置
[source,bash]
----
#禁用selinux和防火墙
setenforce 0
systemctl stop firewalld
systemctl disable firewalld

#上传CentOS-7-x86_64-DVD-1511.iso和XianDian-IaaS-v2.2.iso两个镜像包至controller节点/root目录，并挂载至/opt/目录中
mkdir -p /opt/centos7.2
mkdir -p /opt/iaas

mount /root/CentOS-7-x86_64-DVD-1511.iso /opt/centos7.2/
mount /root/XianDian-IaaS-v2.2.iso /opt/iaas/

#配置本地yum源文件
mv /etc/yum.repos.d/* /media/

cat << EOF > /etc/yum.repos.d/local.repo
[centos]
name=centos
baseurl=file:///opt/centos7.2
gpgcheck=0
enabled=1
[iaas]
name=iaas
baseurl=file:///opt/iaas/iaas-repo
gpgcheck=0
enabled=1
EOF

yum clean all
yum makecache

#安装ftp服务
yum -y install vsftpd

#修改ftp配置文件
echo 'anon_root=/opt' >> /etc/vsftpd/vsftpd.conf

#启动ftp服务并设置开机自启
systemctl start vsftpd
systemctl enable vsftpd

#安装iaas-xiandian软件包
yum -y install iaas-xiandian

#配置环境变量文件/etc/xiandian/openrc.sh
cat << EOF > /etc/xiandian/openrc.sh
HOST_IP=192.168.10.10
HOST_NAME=controller
HOST_IP_NODE=192.168.10.20
HOST_NAME_NODE=compute
RABBIT_USER=openstack
RABBIT_PASS=000000
DB_PASS=000000
DOMAIN_NAME=demo
ADMIN_PASS=000000
DEMO_PASS=000000
KEYSTONE_DBPASS=000000
GLANCE_DBPASS=000000
GLANCE_PASS=000000
NOVA_DBPASS=000000
NOVA_PASS=000000
NEUTRON_DBPASS=000000
NEUTRON_PASS=000000
METADATA_SECRET=000000
#控制节点（controller）的第二块网卡名称
INTERFACE_NAME=eno33554960
CINDER_DBPASS=000000
CINDER_PASS=000000
#计算节点cinder服务使用空分区
BLOCK_DISK=sda3
SWIFT_PASS=000000
#计算节点swift服务使用空分区
OBJECT_DISK=sda4
STORAGE_LOCAL_NET_IP=192.168.10.20
EOF

#安装基础服务(安装完成之后ctrl+D 退出终端重新登录，使主机名生效)
iaas-pre-host.sh

#安装MySQL数据库服务
iaas-install-mysql.sh

#安装Keystone认证服务
iaas-install-keystone.sh

#安装Glance镜像服务
iaas-install-glance.sh

#安装Nova服务
iaas-install-nova-controller.sh

#安装网络服务
iaas-install-neutron-controller.sh
iaas-install-neutron-controller-gre.sh
systemctl enable neutron-lbaas-agent

#安装Dashboard
iaas-install-dashboard.sh

#安装Cinder块存储服务
iaas-install-cinder-controller.sh

#安装Swift对象存储服务
iaas-install-swift-controller.sh

----

===== compute（计算节点）配置
[source,bash]
----
#禁用selinux和防火墙
setenforce 0
systemctl stop firewalld
systemctl disable firewalld

#配置本地yum源文件
mv /etc/yum.repos.d/* /media/

cat << EOF > /etc/yum.repos.d/local.repo
[centos]
name=centos
baseurl=ftp://192.168.10.10/centos7.2
gpgcheck=0
enabled=1
[iaas]
name=iaas
baseurl=ftp://192.168.10.10/iaas/iaas-repo
gpgcheck=0
enabled=1
EOF

yum clean all
yum makecache

#安装iaas-xiandian软件包
yum -y install iaas-xiandian

#配置环境变量文件/etc/xiandian/openrc.sh
cat << EOF > /etc/xiandian/openrc.sh
HOST_IP=192.168.10.20
HOST_NAME=compute
HOST_IP_NODE=192.168.10.10
HOST_NAME_NODE=controller
RABBIT_USER=openstack
RABBIT_PASS=000000
DB_PASS=000000
DOMAIN_NAME=demo
ADMIN_PASS=000000
DEMO_PASS=000000
KEYSTONE_DBPASS=000000
GLANCE_DBPASS=000000
GLANCE_PASS=000000
NOVA_DBPASS=000000
NOVA_PASS=000000
NEUTRON_DBPASS=000000
NEUTRON_PASS=000000
METADATA_SECRET=000000
#计算节点（compute）的第二块网卡名称
INTERFACE_NAME=eno33554960
CINDER_DBPASS=000000
CINDER_PASS=000000
#计算节点cinder服务使用空分区
BLOCK_DISK=sda3
SWIFT_PASS=000000
#计算节点swift服务使用空分区
OBJECT_DISK=sda4
STORAGE_LOCAL_NET_IP=192.168.10.20
EOF


#安装基础服务(安装完成之后ctrl+D 退出终端重新登录，使主机名生效)
iaas-pre-host.sh

#安装计算服务（这个等待的时间比较长）
iaas-install-nova-compute.sh

#安装网络服务
iaas-install-neutron-compute.sh
iaas-install-neutron-compute-gre.sh

#安装Cinder块存储服务
iaas-install-cinder-compute.sh

#安装Swift
iaas-install-swift-compute.sh
----

===== 验证
安装完成之后在浏览器地址栏输入http://192.168.10.10/dashboard/访问Dashboard服务

* 域：demo
* 用户名：admin
* 密码：000000

image::dashborad_01.png[]
image::dashborad_02.png[]
