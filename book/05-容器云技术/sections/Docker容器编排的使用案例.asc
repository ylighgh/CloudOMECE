=== Docker容器编排的使用案例

.规划节点
[cols="10,11,20", options="规划节点"] 
|===
|IP地址 |主机名 |节点

|10.18.4.39
|master
|swarm集群Master节点

|10.18.4.46
|node
|swarm集群Node节点

|===

.基础安装
按照教程Docker引擎的安装将两个节点都安装上docker-ce，配置好主机名和网卡

==== 部署Swarm集群
.master节点基础配置
[source,bash]
------
#修改/etc/hosts文件配置主机映射
cat << EOF >> /etc/hosts
10.18.4.39 master
10.18.4.46 node
EOF

#配置时间同步
yum -y install chrony

sed -i 's/^server/#&/' /etc/chrony.conf

cat << EOF >> /etc/chrony.conf
local stratum 10
server master iburst
allow all
EOF

#重启chronyd服务并设置为开机启动，开启网络时间同步功能
systemctl enable chronyd && systemctl restart chronyd

timedatectl set-ntp true

#配置Docker API
sed "s/'ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.socke'/'ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock'/" /lib/systemd/system/docker.service

echo '' >>  /lib/systemd/system/docker.service
------

.node节点基础配置
[source,bash]
----
#修改/etc/hosts文件配置主机映射
cat << EOF >> /etc/hosts
10.18.4.39 master
10.18.4.46 node
EOF

#配置时间同步
yum -y install chrony

sed -i 's/^server/#&/' /etc/chrony.conf

echo server 10.18.4.39 iburst >> /etc/chrony.conf 

#重启chronyd服务并设置为开机启动，开启网络时间同步功能
systemctl enable chronyd && systemctl restart chronyd

---- 

----
所有节点执行chronyc sources 命令，查询结果中如果存在以 "^*"开头的行，即说明已经同步成功
[root@master ~]# chronyc sources
210 Number of sources = 1
MS Name/IP address         Stratum Poll Reach LastRx Last sample
===============================================================================
^* master                       10   6    17    35    +85ns[  -12us] +/-   18us


[root@node ~]# chronyc sources
210 Number of sources = 1
MS Name/IP address         Stratum Poll Reach LastRx Last sample
===============================================================================
^? master                       11   7    40    12   +240us[ +240us] +/- 9410us

----




